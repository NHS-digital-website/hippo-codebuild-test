---
##
# AWS Code Build spec for building and deploying Hippo CMS
#

version: 0.1

phases:
  install:
    commands:
      - apt-get update
      - apt-get install -qqy software-properties-common python-software-properties
      - apt-get install -qqy build-essential git awscli curl python-pip python-dev
      - pip install virtualenv

      # Java 8 install
      - apt-get update
      - apt-get install -y openjdk-8-jdk
      - apt-get install -y maven
      - java -version
      - update-alternatives --config java
      # - rm -rf /var/lib/apt/lists/*

      # SSH key
      # - aws s3 cp s3://config.mgt.nhsd.io/codebuild/hippo_build/nhs-ci_rsa $HOME/.ssh/nhs-ci_rsa
      # - aws s3 cp s3://config.mgt.nhsd.io/codebuild/hippo_build/nhs-ci_rsa.pub $HOME/.ssh/nhs-ci_rsa.pub
      # - chmod 600 $HOME/.ssh/nhs-ci_rsa

      # Rundeck credentials
      # - aws s3 cp s3://config.mgt.nhsd.io/codebuild/hippo_build/rd.password $HOME/rd.password

      # BRC credentials
      # - aws s3 cp s3://config.mgt.nhsd.io/codebuild/hippo_build/brc.credentials $HOME/brc.credentials

      # Add static.hosting.onehippo.com and github.com, and BloomReach Cloud as known host
      # - touch $HOME/.ssh/known_hosts
      # - ssh-keygen -R static.hosting.onehippo.com
      # - ssh-keyscan static.hosting.onehippo.com >> $HOME/.ssh/known_hosts
      # - ssh-keygen -R github.com
      # - ssh-keyscan github.com >> $HOME/.ssh/known_hosts
      # - ssh-keygen -R missioncontrol-nhsdigitaltrail.onehippo.io
      # - ssh-keyscan missioncontrol-nhsdigitaltrail.onehippo.io >> $HOME/.ssh/known_hosts

  build:
    commands:
      # Tag
#      - ssh-agent bash -c "
#        ssh-add $HOME/.ssh/nhs-ci_rsa && cd ci-cd &&
#        make version.bumpup"
      # Build
      - cd ci-cd && make clean build
      # Set git commit status
      #- cd ci-cd && make github.status.success
      # Upload tgz files to various destinations
      #- ssh-agent bash -c "
      #  ssh-add $HOME/.ssh/nhs-ci_rsa &&
      #  cd ci-cd && make ondemand.upload"
#       - . $HOME/brc.credentials && cd ci-cd && make brc.upload
      # Deploy to DEV Environment
      #- . $HOME/rd.password && cd ci-cd && make ondemand.deploy

artifacts:
  files:
    - "**/*"
